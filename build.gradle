import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id "java-library"
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.serialization" version "${kotlinVersion}"

    id "org.jetbrains.kotlin.plugin.spring" version "${kotlinVersion}" apply false
    id "org.jetbrains.kotlin.plugin.jpa" version "${kotlinVersion}" apply false
    id "org.springframework.boot" version "${springBootVersion}" apply false
    id "io.spring.dependency-management" version "${springDependencyVersion}" apply false
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

allprojects {
    group = "io.nopecho"
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    apply plugin: "java-library"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "org.jetbrains.kotlin.plugin.serialization"

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.15.+"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"
        implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.4.1"

        testImplementation "org.assertj:assertj-core:3.24.2"
        testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
        testImplementation "io.kotest:kotest-runner-junit5:${kotestVersion}"
        testImplementation "io.kotest:kotest-assertions-core:${kotestVersion}"
        testImplementation "io.kotest:kotest-property:${kotestVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += "-Xjsr305=strict"
            jvmTarget = "17"
        }
    }

    tasks.named("test") {
        useJUnitPlatform()
    }
}